import sys
from sqlalchemy import create_engine, text
from sqlalchemy.exc import OperationalError
from config import SQLALCHEMY_DATABASE_URL, DB_NAME
from database import engine, Base
from models.trading_result import TradingResult


def create_database_if_not_exists():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    base_url = SQLALCHEMY_DATABASE_URL.rsplit("/", 1)[0]
    postgres_url = f"{base_url}/postgres"

    try:
        temp_engine = create_engine(postgres_url)
        with temp_engine.connect() as conn:
            result = conn.execute(
                text("SELECT 1 FROM pg_database WHERE datname = :db_name"),
                {"db_name": DB_NAME},
            )

            if not result.fetchone():
                conn.execute(text("COMMIT"))
                conn.execute(text(f"CREATE DATABASE {DB_NAME}"))
                print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print(f"‚ÑπÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    except OperationalError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö '{DB_NAME}': {e}")
        return False

    return True


def init_database():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã"""
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not create_database_if_not_exists():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        sys.exit(1)

    # –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    try:
        Base.metadata.create_all(bind=engine)
        print("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")

        tables = Base.metadata.tables.keys()
        print(f"üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {list(tables)}")

        print("\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã spimex_trading_results:")
        for column in TradingResult.__table__.columns:
            print(f"   {column.name}: {column.type}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        sys.exit(1)


if __name__ == "__main__":
    init_database()
